library(systemPipeR)
library(systemPipeRdata)
systemPipeRdata::genWorkenvir(workflow = 'new', mydirname = 'spr_project')
setwd('spr_project')
# Create a project
sal_wf <- SPRproject(logs.dir = '.SPRproject_wf')
library(systemPipeR)
library(systemPipeRdata)
tryCMD("gzip")
tryCMD("Hisat2")
tryCMD("Hisat2")
shiny::runApp('Desktop/Shiny_apps/Shiny_diseases_predictor_RF')
runApp()
runApp('Desktop/Shiny_apps/Shiny_diseases_predictor_RF')
1%in%1
library(shiny); runApp('Desktop/test.R')
runApp('Desktop/test.R')
runApp('Desktop/test.R')
library(shiny)
runApp('Desktop/test.R')
runApp('Desktop/test.R')
runApp('Desktop/Shiny_apps/Shiny_diseases_predictor_RF')
?t.test
# Read in dataset and the RF model_diabetes
diabetes.dataset <- read.csv("diabetes.txt", stringsAsFactors = T)
# Set working directory
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Read in dataset and the RF model_diabetes
diabetes.dataset <- read.csv("diabetes.txt", stringsAsFactors = T)
a <- diabetes.dataset$glucose[diabetes.dataset$diabetes == "pos",]
levels(diabetes.dataset)
levels(diabetes.dataset$diabetes)
a <- diabetes.dataset$glucose[diabetes.dataset$diabetes == "pos"]
b <- diabetes.dataset$glucose[diabetes.dataset$diabetes == "neg"]
t.test(a,b)
length(d)
length(b)
length(a)
runApp()
paste("holo","tu")
diabetes.dataset[paste0(diabetes.dataset,"$","glucose"),diabetes.dataset$diabetes == "Yes"])
diabetes.dataset[paste0(diabetes.dataset,"$","glucose"),diabetes.dataset$diabetes == "Yes"]
diabetes.dataset[paste0("diabetes.dataset","$","glucose"),diabetes.dataset$diabetes == "Yes"]
paste0("diabetes.dataset","$","glucose")
runApp()
diabetes.dataset$glucose[diabetes.dataset$diabetes == "No"]
diabetes.dataset[diabetes.dataset$diabetes == "No",diabetes.dataset$glucose]
diabetes.dataset[diabetes.dataset$diabetes == "No","glucose"]
diabetes.dataset
diabetes.dataset[diabetes.dataset$diabetes == "neg","glucose"]
runApp()
test(diabetes.dataset[diabetes.dataset$diabetes == "neg","glucose"],diabetes.dataset[diabetes.dataset$diabetes == "pos","glucose"])
t.test(diabetes.dataset[diabetes.dataset$diabetes == "neg","glucose"],diabetes.dataset[diabetes.dataset$diabetes == "pos","glucose"])
p.val <- t.test(diabetes.dataset[diabetes.dataset$diabetes == "neg","glucose"],diabetes.dataset[diabetes.dataset$diabetes == "pos","glucose"])
p.val$p.value
round(p.val$p.value,3)
round(p.val$p.value,10)
options
options(digits = 3)
p.val$p.value
runApp()
runApp()
length(2.2222222)
digits(2.2222222)
format(1232424.23231212, nsmall=2)
format(1232424.23231212, nsmall=3)
p.val
pval$p.val
p.val
runApp()
p.val$p.value
options
options(digits = 6)
p.val$p.value
format(p.val$p.value, nsmall = 3)
runApp()
p.val$p.value
options(digits = 4)
p.val
options(digits = 4)
p.val$p.value
# Link to D
output$myplot <- renderPlot(
t.test(mtcars$wt, mtcars$hp)
boxplot(mtcars))
t.test(mtcars$wt, mtcars$hp)
mtcars
t.test(mtcars$wt[mtcars$carb == 1,],mtcars$wt[mtcars$carb == 4,])
t.test(mtcars$wt[mtcars$carb == 1],mtcars$wt[mtcars$carb == 4])
runApp()
?signif
runApp()
runApp()
runApp()
runApp()
paste0("Non-diabetic vs diabetic patients,~", "italic(p~val)~", "<~", pval)
pval <- p.val$p.value
paste0("Non-diabetic vs diabetic patients,~", "italic(p~val)~", "<~", pval)
runApp()
bquote(.("Non-diabetic vs diabetic patients \n") ~ italics("pval") ~ .("<") ~ .(pval))
runApp()
shiny::runApp()
runApp()
runApp()
